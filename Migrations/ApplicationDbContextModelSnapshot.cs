// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using programmeringmed.Net3.Data;

#nullable disable

namespace programmeringmed.Net3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("programmeringmed.Net3.Models.AuthorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.BookModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReleaseYear")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PersonModelId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.BorrowModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BooksId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BooksId");

                    b.HasIndex("PersonsId");

                    b.ToTable("Borrows");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.PersonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Age")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.BookModel", b =>
                {
                    b.HasOne("programmeringmed.Net3.Models.AuthorModel", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("programmeringmed.Net3.Models.PersonModel", null)
                        .WithMany("Books")
                        .HasForeignKey("PersonModelId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.BorrowModel", b =>
                {
                    b.HasOne("programmeringmed.Net3.Models.BookModel", "Books")
                        .WithMany("Borrows")
                        .HasForeignKey("BooksId");

                    b.HasOne("programmeringmed.Net3.Models.PersonModel", "Persons")
                        .WithMany("Borrows")
                        .HasForeignKey("PersonsId");

                    b.Navigation("Books");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.AuthorModel", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.BookModel", b =>
                {
                    b.Navigation("Borrows");
                });

            modelBuilder.Entity("programmeringmed.Net3.Models.PersonModel", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Borrows");
                });
#pragma warning restore 612, 618
        }
    }
}
